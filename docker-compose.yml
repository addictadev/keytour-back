version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: keytour-app
    ports:
      - "9000:9000"
    restart: always  
    environment:
      - NODE_ENV=development
      - MONGO_URI=mongodb://mongo:27017/keytour
    depends_on:
      - mongo
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev  # Use the dev script with nodemon

  mongo:
    image: mongo:latest
    container_name: keytour-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8888:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
      ME_CONFIG_BASICAUTH: false  

volumes:
  mongo-data:















# version: '3.8'

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     container_name: keytour-app
#     expose:
#       - "9000"
#     environment:
#       - NODE_ENV=development
#       - MONGO_URI=mongodb://mongo:27017/keytour
#     depends_on:
#       - mongo
#     volumes:
#       - ./src:/app/src
#       - /app/node_modules
#     command: npm run dev  # Use the dev script with nodemon

#   nginx:
#     image: nginx:latest
#     container_name: keytour-nginx
#     ports:
#       - "80:80"
#     volumes:
#       - ./nginx.conf:/etc/nginx/nginx.conf
#     depends_on:
#       - app

#   mongo:
#     image: mongo:latest
#     container_name: keytour-mongo
#     ports:
#       - "27017:27017"
#     volumes:
#       - mongo-data:/data/db

#   mongo-express:
#     image: mongo-express
#     restart: always
#     ports:
#       - 8888:8081
#     environment:
#       ME_CONFIG_MONGODB_ADMINUSERNAME: root
#       ME_CONFIG_MONGODB_ADMINPASSWORD: example
#       ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
#       ME_CONFIG_BASICAUTH: false  

# volumes:
#   mongo-data:

